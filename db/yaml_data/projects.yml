---
-
  meta_title: RAM Mounts | Full Stack Rails Developer | Eric Stephenson
  meta_description: E-Commerce Ruby on Rails application for RAM Mounts.
  title: RAM Mounts
  slug: ram-mounts
  cover: rammounts-cover.jpg
  images:
    - rammounts-cover.jpg
    - rammounts-home-tiles.jpg
    - rammounts-home-footer.jpg
    - rammounts-motorcycle-wizard-initial.jpg
    - rammounts-motorcycle-wizard-complete.jpg
  site_link: https://rammount.com/
  repo_link:
  summary: E-Commerce website for RAM Mounts, a manufacturer of durable
               mounting systems for mobile devices. Built in Ruby on Rails
               with Elasticsearch.
  content:
    - While working on this legacy codebase I went from building new
      webpages and implementing Bootstrap styling to constructing full-stack
      systems for heavily AJAX-ed features, creating new Elasticsearch indices,
      integrating a module of forms with Jira, slimming down fat models and
      controllers with refactoring techniques and service objects, and
      rebuilding our most prominent JavaScript SPA's in ReactJS.

    - I am currently building multiple JSON API's that fetch data with
      Elasticsearch queries and a CRUD interface for a new set of landing pages
      to be stored in Elasticsearch.
  highlights:
    - Multi-step mount builders (wizards) running on AJAX and Elasticsearch
    - Complex system of service objects for main search algorithm
    - SPA for purchasing mounting systems to mount ELD devices
    - Mobile-friendly webpages across the board with Bootstrap 3 Grids
  tech_stack:
    - Ruby on Rails
    - Elasticsearch
    - MySQL
    - jQuery
    - HTML5
    - CSS3
    - SASS
    - Bootstrap 3
    - Vagrant
-
  meta_title: Bolt Network | Full Stack Rails Developer | Eric Stephenson
  meta_description: Reverse engineer Netflix UI effects in a Ruby on Rails
                    application using jQuery, CSS3, and Amazon S3.
  title: Bolt Network
  slug: bolt-network
  cover: bolt-network-cover.jpg
  images:
    - bolt-network-cover.jpg
    - bolt-network-search-bar.jpg
    - bolt-network-hover-1.jpg
    - bolt-network-hover-2.jpg
    - bolt-network-the-hangover.jpg
  site_link: https://bolt-network-wstevo4891.herokuapp.com/
  repo_link: https://github.com/wstevo4891/bolt-network
  summary: A Ruby on Rails side project where I attempt to reverse engineer
               the UI of Netflix.
  content:
    - Bolt Network is an on-going attempt to reverse engineer Netflix's
      UI effects. What began as a practice project on Codecademy is now a
      large application with 80 movie records that uses Ruby algorithms,
      complex JavaScript effects, and serves images from Amazon S3. My
      additions include an animated, fixed navbar, a main slideshow scaled
      to browser width with jQuery, an animated search form using Regexp,
      and CSS3-animated carousel sliders built with Ruby and a modified
      version of Unslider. Using Bootstrap, jQuery, and my own break-point
      mixins, the views adapt to browser width to display elegantly on any
      device.
  highlights:
    - Netflix-style carousels on homepage that load with a Ruby algorithm
    - Carousels mimic Netflix hover effects with CSS3
    - Main slideshow adapts to browswer width using jQuery
    - Search bar mimics Netflix animation and searches titles with Regular Expressions
    - Navbar achieved shadowing effects of Netflix navbar
    - Admin record interface with AJAX
  tech_stack:
    - Ruby on Rails
    - PostgreSQL
    - Amazon S3
    - jQuery
    - HTML5
    - CSS3
    - SASS
    - Bootstrap 3
    - Heroku
-
  meta_title: Griffen Financial | Full Stack Rails Developer | Eric Stephenson
  meta_description: Ruby on Rails application showcasing integration with
                    Dropbox and Zoho API's, PDF form uploads to Dropbox using
                    Wicked PDF, and dynamic nested forms with Cocoon.
  title: Griffen Financial
  slug: griffen-financial
  cover: griffen-financial-cover.jpg
  images:
    - griffen-financial-cover.jpg
    - griffen-financial-merchant-application.jpg
    - griffen-financial-products-page.jpg
    - griffen-financial-product.jpg

  site_link: https://dry-tor-4505.herokuapp.com/
  repo_link: https://github.com/wstevo4891/griffen
  summary: Ruby on Rails website using CarrierWave, Cocoon, Wicked_PDF,
               Dropbox-SDK, and Ruby-Zoho for processing application forms.
  content:
    - Griffen Financial is a startup that aims to provide specialized
      credit/debit card readers for legal marijuana merchants. The client wanted
      a site to advertise the devices and provide online application forms for
      buyers. Another request was that the site be integrated with Dropbox, Zoho
      CMS, and Mandrill.

    - I began this project in March, 2015, and launched a demo version online
      after four weeks. In the succeeding months, I completed the integrations
      requested and implemented multiple ruby gems for increased functionality.
      I used Carrierwave for image uploads on the forms and Cocoon for a form
      that needed image uploads from each shareholder or partner of the
      customer's business. In July 2015, the project was put on hold
      indefinitely. I have since rebuilt Griffen Financial with cleaner code and
      host a demo on Heroku.
  highlights:
    - Integration with Dropbox, Zoho CMS, and Mandrill
    - Bootstrap forms with add-and-remove nested models
  tech_stack:
    - Ruby on Rails
    - PostgreSQL
    - jQuery
    - HTML5
    - SASS
    - Bootstrap 3
    - Ruby APIs
    - Heroku
-
  meta_title: At Home with Baldwin Interiors | Full Stack Rails Developer | Eric Stephenson
  meta_description: Ruby on Rails e-commerce application for a small business
                    built with the Spree engine.
  title: At Home with Baldwin Interiors
  slug: baldwin-interiors
  cover: baldwin-interiors-cover.jpg
  images:
    - baldwin-interiors-cover.jpg
    - baldwin-interiors-interiors.jpg
    - baldwin-interiors-footer.jpg
    - baldwin-interiors-glassware.jpg
  site_link: https://vast-reef-1675.herokuapp.com/
  repo_link: https://github.com/wstevo4891/atbaldwin
  summary: E-commerce website for a small business built in Ruby on Rails
               with the Spree engine.
  content:
    - Ruby on Rails e-commerce website for a home furnishings and gift store in
      Columbus, GA. The client wanted a site to promote the store, show its
      location, and offer its products for sale online. With the Spree
      e-commerce engine, the site has user-friendly navigation to all products,
      organized by categories, and a backend that allows the client to add
      products to the database with ease.
  highlights:
    - Customized Spree application
    - Google Maps embed in footer
  tech_stack:
    - Ruby on Rails
    - PostgreSQL
    - Spree Engine
    - Google Maps API
    - jQuery
    - HTML5
    - SASS
    - Bootstrap 3
    - Heroku
-
  meta_title: Suggestion Box | Full Stack Ruby and JavaScript Developer | Eric Stephenson
  meta_description: Simple MEAN Stack application for creating and upvoting
                    suggestions for the workplace.
  title: Suggestion Box
  slug: suggestion-box
  cover: suggestion-box-home.jpg
  images:
    - suggestion-box-home.jpg
    - suggestion-box-form.jpg
    - suggestion-box-comments.jpg
    - suggestion-box-laffy-taffy.jpg
  site_link: https://suggestion-box-mean.herokuapp.com/
  repo_link: https://github.com/wstevo4891/suggestion_box_mean
  summary: MEAN Stack app for co-workers to make anonymous
           suggestions for improving their work space, meetings, etc.
  content:
    - Suggestion Box is a tool for co-workers to make anonymous suggestions for
      improving their work space, meetings, etc. After building this simple app
      for an AngularJS course final project, I went a step further and put it on
      a full MEAN stack. I installed node modules with NPM, added a Node/Express
      backend, connected a Mongo Database through Mongoose, and handled
      dependencies with Bower.

    - "I built this app in a week after finishing the Codecademy AngularJS
      course. Suggestion Box consists of two pages: a home page for posting
      suggestions and upvoting them, and a suggestion page for commenting on
      individual suggestions and upvoting the comments. Using Bootstrap for
      structure and responsive views, the app displays well on any device."
  highlights:
    - Customized Spree application
    - Google Maps embed in footer
  tech_stack:
    - AngularJS
    - NodeJS
    - ExpressJS
    - MongoDB
    - Heroku

---
- title: RAM Mounts
  slug: ram-mounts
  cover: rammounts-cover.png
  images:
    - rammounts-cover.png
    - rammounts-mount-builder.png
    - rammounts-xgrip.png
    - rammounts-motorcycle-page.png
    - rammounts-shop-all.png
  desktop: rammounts-home-page.png
  mobile:
    - rammounts-mobile.png
    - rammounts-mobile-menu.png
  meta_title: RAM Mounts | Full Stack Rails Developer | Eric Stephenson
  meta_description: E-Commerce Ruby on Rails application for RAM Mounts.
  summary:  E-Commerce website for RAM Mounts, a manufacturer of durable
            mounting systems for mobile devices. Built in Ruby on Rails
            with Elasticsearch.
  site_link: https://rammount.com/
  repo_link:
  description:
    - RAM Mounts is a manufacturer of sturdy mounting equipment for a
      wide range of electronic devices. This e-commerce website is a
      Ruby on Rails 4 application integrated with Elasticsearch for
      high-powered full-text search of over 5,000 SKUs.

    - While working on this legacy codebase, I went from building new
      webpages and implementing Bootstrap styling to constructing
      heavily AJAX-ed search results, Elasticsearch-based APIs, and
      a variety of Ruby services. To ensure stability and performance,
      I wrote a substantial test suite using Minitest and Capybara.
  features:
    - RAM Mount Builder SPA
    - Full-text search
    - Shop All faceted search pages
    - Mobile-friendly webpages across the board
    - UPS Street Validation during checkout
  apis:
    - UPS
    - Jira
    - MailChimp
  tech_stack:
    - Ruby on Rails 4
    - Elasticsearch
    - MySQL
    - jQuery
    - HTML5
    - SASS
    - Bootstrap 3
    - Vagrant

- title: Bolt Network
  slug: bolt-network
  cover: bolt-network-cover.png
  images:
    - bolt-network-cover.png
    - bolt-network-carousels.png
    - bolt-network-hover.png
    - bolt-network-search.png
    - bolt-network-sci-fi.png
  desktop: bolt-network-home-page.png
  mobile:
    - bolt-network-mobile.png
    - bolt-network-mobile-menu.png
  meta_title: Bolt Network | Full Stack Rails Developer | Eric Stephenson
  meta_description: Reverse engineer Netflix UI and features in a Ruby on Rails
                    application using ReactJS, PostgreSQL, and Amazon S3.
  summary: A Ruby on Rails side project where I attempt to reverse engineer
           the UI of Netflix.
  site_link: https://lit-anchorage-35230.herokuapp.com/
  repo_link: https://github.com/wstevo4891/bolt-network-react
  description:
    - Bolt Network is an on-going attempt to reverse engineer Netflix's
      features and UI. What began as a practice project on Codecademy is
      now a Ruby on Rails 5 web application with over 100 movie records.
      Using ActiveRecord queries to a PostgreSQL database, Bolt-Network
      serves a JSON API to a fully ReactJS front end for displaying and
      searching popular movies.
  features:
    - Netflix-style movie carousels
    - Netflix-style instant-results search
    - Genre, Recently Added, and My List pages
    - Like/Dislike and Add to My List buttons
    - Netflix-style mobile menu
  apis:
    - IMDB
    - Amazon S3
  tech_stack:
    - Ruby on Rails 5
    - ReactJS
    - PostgreSQL
    - HTML5
    - SASS
    - Bootstrap 4
    - Docker
    - Heroku

- title: Griffen Financial
  slug: griffen-financial
  cover: griffen-financial-cover.jpg
  images:
    - griffen-financial-cover.jpg
    - griffen-financial-merchant-application.jpg
    - griffen-financial-products-page.jpg
    - griffen-financial-product.jpg
  desktop: griffen-home-page.png
  mobile:
    - griffen-mobile-full.png
    - griffen-mobile-menu.png
  meta_title: Griffen Financial | Full Stack Rails Developer | Eric Stephenson
  meta_description: Ruby on Rails application showcasing integration with
                    Dropbox and Zoho APIs, PDF form uploads to Dropbox using
                    Wicked PDF, and dynamic nested forms with Cocoon.
  summary:  Ruby on Rails web application for processing application forms.
            Integrated with Dropbox, MailChimp, and Zoho APIs.
  site_link: https://dry-tor-4505.herokuapp.com/
  repo_link: https://github.com/wstevo4891/griffen
  description:
    - Griffen Financial is a startup that aims to provide specialized
      credit/debit card readers for legal cannabis merchants. The client wanted
      a site to advertise the devices and provide online application forms for
      buyers. Another request was that the site be integrated with Dropbox, Zoho
      CMS, and Mandrill.

    - I began this project in March, 2015, and launched a demo version online
      after four weeks. In the succeeding months, I completed the integrations
      requested and implemented multiple ruby gems for increased functionality.
      I used Carrierwave for image uploads on the forms and Cocoon for a form
      that needed image uploads from each shareholder or partner of the
      customer's business. In July 2015, the project was put on hold
      indefinitely. I have since rebuilt Griffen Financial with cleaner code
      and host a demo on Heroku.
  features:
    - Integration with Dropbox, Zoho CMS, and MailChimp APIs
    - Bootstrap forms with add-and-remove nested fields
    - Image uploads with Carrierwave
    - PDF generation of completed forms
  apis:
    - Dropbox
    - MailChimp
    - Zoho CMS
  tech_stack:
    - Ruby on Rails 4
    - PostgreSQL
    - jQuery
    - HTML5
    - SASS
    - Bootstrap 3
    - Ruby APIs
    - Heroku

- title: At Home with Baldwin Interiors
  slug: baldwin-interiors
  cover: baldwin-interiors-cover.jpg
  images:
    - baldwin-interiors-cover.jpg
    - baldwin-interiors-interiors.jpg
    - baldwin-interiors-footer.jpg
    - baldwin-interiors-glassware.jpg
  desktop: baldwin-home-page.png
  mobile:
    - baldwin-mobile.png
    - baldwin-mobile-menu.png
  meta_title: At Home with Baldwin Interiors | Full Stack Rails Developer | Eric Stephenson
  meta_description: Ruby on Rails e-commerce application for a small business
                    built with the Spree engine.
  summary:  E-commerce website for a small business built in Ruby on Rails
            with the Spree engine.
  site_link: https://vast-reef-1675.herokuapp.com/
  repo_link: https://github.com/wstevo4891/atbaldwin
  description:
    - Ruby on Rails e-commerce website for a home furnishings and gift store in
      Columbus, GA. The client wanted a site to promote the store, show its
      location, and offer its products for sale online. With the Spree
      e-commerce engine, the site has user-friendly navigation to all products,
      organized by categories, and a backend that allows the client to add
      products to the database with ease.
  features:
    - Customized Spree application
    - Guided navigation of products
    - Filtered search results
    - Google Maps embed in footer
  apis:
    - Google Maps
  tech_stack:
    - Ruby on Rails 4
    - PostgreSQL
    - Spree Engine
    - jQuery
    - HTML5
    - SASS
    - Bootstrap 3
    - Heroku

- title: Suggestion Box
  slug: suggestion-box
  cover: suggestion-box-home.jpg
  images:
    - suggestion-box-home.jpg
    - suggestion-box-form.jpg
    - suggestion-box-comments.jpg
    - suggestion-box-laffy-taffy.jpg
  desktop: suggestion-box-full-page.png
  mobile:
    - suggestion-box-mobile.png
    - suggestion-box-mobile-comments.png
  meta_title: Suggestion Box | Full Stack Ruby and JavaScript Developer | Eric Stephenson
  meta_description: Simple MEAN Stack application for creating and upvoting
                    suggestions for the workplace.
  summary: MEAN Stack app for co-workers to make anonymous
           suggestions for improving their work space, meetings, etc.
  site_link: https://suggestion-box-mean.herokuapp.com/
  repo_link: https://github.com/wstevo4891/suggestion_box_mean
  description:
    - Suggestion Box is a tool for co-workers to make anonymous suggestions for
      improving their work space, meetings, etc. After building this simple app
      for an AngularJS course final project, I went a step further and put it on
      a full MEAN stack. I installed node modules with NPM, added a Node/Express
      backend, connected a Mongo Database through Mongoose, and handled
      dependencies with Bower.

    - "I built this app in a week after finishing the Codecademy AngularJS
      course. Suggestion Box consists of two pages: a home page for posting
      suggestions and upvoting them, and a suggestion page for commenting on
      individual suggestions and upvoting the comments. Using Bootstrap for
      structure and responsive views, the app displays well on any device."
  features:
    - Small-text posting
    - Comment on posts
    - Up-voting / Down-voting
  apis:
  tech_stack:
    - AngularJS
    - NodeJS
    - ExpressJS
    - MongoDB
    - Heroku
